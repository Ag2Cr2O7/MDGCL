import argparse
def parse_args(dataset='yelp'):
    if dataset=='amazon':
        parser = argparse.ArgumentParser(description='Model Params')
        parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
        parser.add_argument('--batch', default=256, type=int, help='batch size')
        parser.add_argument('--epoch', default=50, type=int, help='epochs')
        parser.add_argument('--d', default=32, type=int, help='embedding size')
        parser.add_argument('--gnn_layer', default=2, type=int, help='gnn layers')
        parser.add_argument('--data', default=dataset, type=str, help='name of dataset')
        parser.add_argument('--dropout', default=0.25, type=float, help='rou')
        parser.add_argument('--lambda2', default=1e-4, type=float, help='l2 reg weight')
        parser.add_argument('--cuda', default='0', type=str, help='the gpu to use')
        parser.add_argument('--Lgraph', default=1e-2, type=float, help='weight of Lgraph')
        parser.add_argument('--t', default=0.3, type=float, help='tao of Ls')
        parser.add_argument('--Lhyper', default=1e-4, type=float, help='weight of Lhyper')
        parser.add_argument('--temp', default=0.7, type=float, help='tao\' of Lh')
        parser.add_argument('--earlystop', default=3, type=int, help='earlystop')
        parser.add_argument('--use_log', default=True, type=bool, help='log')


    elif dataset=='gowalla':
        parser = argparse.ArgumentParser(description='Model Params')
        parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
        parser.add_argument('--batch', default=256, type=int, help='batch size')
        parser.add_argument('--epoch', default=50, type=int, help='epochs')
        parser.add_argument('--d', default=32, type=int, help='embedding size')
        parser.add_argument('--gnn_layer', default=2, type=int, help='gnn layers')
        parser.add_argument('--data', default=dataset, type=str, help='name of dataset')
        parser.add_argument('--dropout', default=0.25, type=float, help='rou')
        parser.add_argument('--lambda2', default=1e-4, type=float, help='l2 reg weight')
        parser.add_argument('--cuda', default='0', type=str, help='the gpu to use')
        parser.add_argument('--Lgraph', default=1e-2, type=float, help='weight of Lgraph')
        parser.add_argument('--t', default=0.3, type=float, help='tao of Ls')
        parser.add_argument('--Lhyper', default=1e-4, type=float, help='weight of Lhyper')
        parser.add_argument('--temp', default=1, type=float, help='tao\' of Lh')
        parser.add_argument('--earlystop', default=3, type=int, help='earlystop')
        parser.add_argument('--use_log', default=True, type=bool, help='log')

    elif dataset=='yelp':
        parser = argparse.ArgumentParser(description='Model Params')
        parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
        parser.add_argument('--batch', default=256, type=int, help='batch size')
        parser.add_argument('--epoch', default=50, type=int, help='epochs')
        parser.add_argument('--d', default=32, type=int, help='embedding size')
        parser.add_argument('--gnn_layer', default=2, type=int, help='gnn layers')
        parser.add_argument('--data', default=dataset, type=str, help='name of dataset')
        parser.add_argument('--dropout', default=0.25, type=float, help='rou')
        parser.add_argument('--lambda2', default=1e-4, type=float, help='l2 reg weight')
        parser.add_argument('--cuda', default='0', type=str, help='the gpu to use')
        parser.add_argument('--Lgraph', default=1e-2, type=float, help='weight of Lgraph')
        parser.add_argument('--t', default=0.4, type=float, help='tao of Ls')
        parser.add_argument('--Lhyper', default=1e-5, type=float, help='weight of Lhyper')
        parser.add_argument('--temp', default=1, type=float, help='tao\' of Lh')
        parser.add_argument('--earlystop', default=3, type=int, help='earlystop')
        parser.add_argument('--use_log', default=True, type=bool, help='log')


    elif dataset=='tmall':
        parser = argparse.ArgumentParser(description='Model Params')
        parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
        parser.add_argument('--batch', default=256, type=int, help='batch size')
        parser.add_argument('--epoch', default=50, type=int, help='epochs')
        parser.add_argument('--d', default=32, type=int, help='embedding size')
        parser.add_argument('--gnn_layer', default=3, type=int, help='gnn layers')
        parser.add_argument('--data', default=dataset, type=str, help='name of dataset')
        parser.add_argument('--dropout', default=0.25, type=float, help='rou')
        parser.add_argument('--lambda2', default=1e-4, type=float, help='l2 reg weight')
        parser.add_argument('--cuda', default='0', type=str, help='the gpu to use')
        parser.add_argument('--Lgraph', default=1e-2, type=float, help='weight of Lgraph')
        parser.add_argument('--t', default=0.3, type=float, help='tao of Ls')
        parser.add_argument('--Lhyper', default=1e-4, type=float, help='weight of Lhyper')
        parser.add_argument('--temp', default=0.6, type=float, help='tao\' of Lh')
        parser.add_argument('--earlystop', default=3, type=int, help='earlystop')
        parser.add_argument('--use_log', default=True, type=bool, help='log')

    elif dataset=='ml10m':
        parser = argparse.ArgumentParser(description='Model Params')
        parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
        parser.add_argument('--batch', default=256, type=int, help='batch size')
        parser.add_argument('--epoch', default=50, type=int, help='epochs')
        parser.add_argument('--d', default=32, type=int, help='embedding size')
        parser.add_argument('--gnn_layer', default=3, type=int, help='gnn layers')
        parser.add_argument('--data', default=dataset, type=str, help='name of dataset')
        parser.add_argument('--dropout', default=0.25, type=float, help='rou')
        parser.add_argument('--lambda2', default=1e-3, type=float, help='l2 reg weight')
        parser.add_argument('--cuda', default='0', type=str, help='the gpu to use')
        parser.add_argument('--Lgraph', default=1e-3, type=float, help='weight of Lgraph')
        parser.add_argument('--t', default=0.2, type=float, help='tao of Ls')
        parser.add_argument('--Lhyper', default=1e-4, type=float, help='weight of Lhyper')
        parser.add_argument('--temp', default=0.3, type=float, help='tao\' of Lh')
        parser.add_argument('--earlystop', default=5, type=int, help='earlystop')
        parser.add_argument('--use_log', default=True, type=bool, help='log')

    else: #default:amazon
        parser = argparse.ArgumentParser(description='Model Params')
        parser.add_argument('--lr', default=1e-3, type=float, help='learning rate')
        parser.add_argument('--batch', default=256, type=int, help='batch size')
        parser.add_argument('--epoch', default=50, type=int, help='epochs')
        parser.add_argument('--d', default=32, type=int, help='embedding size')
        parser.add_argument('--gnn_layer', default=2, type=int, help='gnn layers')
        parser.add_argument('--data', default=dataset, type=str, help='name of dataset')
        parser.add_argument('--dropout', default=0.25, type=float, help='rou')
        parser.add_argument('--lambda2', default=1e-4, type=float, help='l2 reg weight')
        parser.add_argument('--cuda', default='0', type=str, help='the gpu to use')
        parser.add_argument('--Lgraph', default=1e-2, type=float, help='weight of Lgraph')
        parser.add_argument('--t', default=0.3, type=float, help='tao of Ls')
        parser.add_argument('--Lhyper', default=1e-4, type=float, help='weight of Lhyper')
        parser.add_argument('--temp', default=0.7, type=float, help='tao\' of Lh')
        parser.add_argument('--earlystop', default=3, type=int, help='earlystop')
        parser.add_argument('--use_log', default=True, type=bool, help='log')
    return parser.parse_args()



